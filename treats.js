// Generated by CoffeeScript 2.5.1
var DAYS, begin, getDay, menu, parse,
  indexOf = [].indexOf;

({menu} = require('./scraper.coffee'));

// Weekday definitions and getter
DAYS = {
  abs: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'],
  rel: ['yesterday', 'today', 'tomorrow']
};

getDay = function(day) {
  if (indexOf.call(DAYS.abs, day) >= 0) {
    return DAYS.abs.indexOf(day);
  }
  if (indexOf.call(DAYS.rel, day) >= 0) {
    return DAYS.rel.indexOf(name) - 2 + new Date().getDay();
  }
};

// Argument parsing
parse = function(args) {
  var arg, ref, ref1, ref2, ref3;
  if (args.length === 0 || args[0] === 'week') {
    return [0, 1, 2, 3, 4];
  }
  if (args[1] === '-') {
    return (function() {
      var results = [];
      for (var i = ref = getDay(args[0]), ref1 = getDay(args[2]); ref <= ref1 ? i <= ref1 : i >= ref1; ref <= ref1 ? i++ : i--){ results.push(i); }
      return results;
    }).apply(this);
  }
  if (ref2 = args[0], indexOf.call(DAYS.abs, ref2) >= 0) {
    return (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = args.length; i < len; i++) {
        arg = args[i];
        results.push(getDay(arg));
      }
      return results;
    })();
  }
  if (ref3 = args[0], indexOf.call(DAYS.rel, ref3) >= 0) {
    return (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = args.length; i < len; i++) {
        arg = args[i];
        results.push(get_day(arg));
      }
      return results;
    })();
  }
};

begin = function() {
  console.log(parse(process.argv.slice(2)));
  return menu(0);
};

begin();
